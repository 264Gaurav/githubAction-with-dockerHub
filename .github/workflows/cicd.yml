name: githubAction with dockerhub

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest

  deploy:
    name: Build and push Docker image to Docker Hub
    needs: build
    runs-on: ubuntu-latest
    # only run deployment when this workflow is triggered by a push to main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          # prefer a personal access token; you can also use DOCKERHUB_PASSWORD
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          # optional: build for multiple platforms (remove if not needed)
          # platforms: linux/amd64,linux/arm64
          # tags: |
          #   ${{ env.IMAGE_NAME }}:latest
          #   ${{ env.IMAGE_NAME }}:${{ github.sha }}
          # optional build cache (uncomment if you want caching)
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
